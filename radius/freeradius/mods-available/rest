rest {
    tls {
#       ca_file = ${certdir}/cacert.pem
#       ca_info_file = ${certdir}/cacert_bundle.pem
#       ca_path = ${certdir}

#       certificate_file = /path/to/radius.crt
#       private_key_file = /path/to/radius.key
#       private_key_password = "supersecret"
#       random_file = /dev/urandom

#       check_cert = yes
#       check_cert_cn = yes
    }

    connect_uri = "http://127.0.0.1:9000/radius"
    connect_timeout = 4.0

    authorize {
        uri = "${..connect_uri}/authorize"
        method = "post"
        body = "json"
        data = "{\"username\":\"%{User-Name}\",\"called_station_id\":\"%{Called-Station-Id}\",\"calling_station_id\":\"%{Calling-Station-Id}\",\"nas_identifier\":\"%{NAS-Identifier}\",\"nas_port_type\":\"%{NAS-Port-Type}\",\"service_type\":\"%{Service-Type}\"}"
        tls = ${..tls}
        timeout = 3.0
        fail_on_error = yes
        expect_status_code = 200
    }

    authenticate {
        uri = "${..connect_uri}/auth"
        method = "post"
        body = "json"
        data = "{\"username\":\"%{User-Name}\",\"password\":\"%{User-Password}\",\"called_station_id\":\"%{Called-Station-Id}\",\"calling_station_id\":\"%{Calling-Station-Id}\"}"
        tls = ${..tls}
        timeout = 3.0
        fail_on_error = yes
        expect_status_code = 204
    }

    accounting {
        uri = "${..connect_uri}/accounting"
        method = "post"
        body = "json"
        data = "{\"username\":\"%{User-Name}\",\"session_id\":\"%{Acct-Session-Id}\",\"status\":\"%{Acct-Status-Type}\",\"session_time\":\"%{Acct-Session-Time}\",\"input_octets\":\"%{Acct-Input-Octets}\",\"output_octets\":\"%{Acct-Output-Octets}\",\"input_packets\":\"%{Acct-Input-Packets}\",\"output_packets\":\"%{Acct-Output-Packets}\",\"input_gigawords\":\"%{Acct-Input-Gigawords}\",\"output_gigawords\":\"%{Acct-Output-Gigawords}\",\"called_station_id\":\"%{Called-Station-Id}\",\"calling_station_id\":\"%{Calling-Station-Id}\",\"terminate_cause\":\"%{Acct-Terminate-Cause}\",\"nas_ip_address\":\"%{NAS-IP-Address}\",\"nas_identifier\":\"%{NAS-Identifier}\",\"nas_port\":\"%{NAS-Port}\",\"nas_port_type\":\"%{NAS-Port-Type}\",\"service_type\":\"%{Service-Type}\",\"framed_protocol\":\"%{Framed-Protocol}\",\"framed_ip_address\":\"%{Framed-IP-Address}\",\"mikrotik_rate_limit\":\"%{reply:Mikrotik-Rate-Limit}\"}"
        tls = ${..tls}
        timeout = 3.0
        fail_on_error = no
        expect_status_code = 204
    }

    post-auth {
        uri = "${..connect_uri}/post-auth"
        method = "post"
        body = "json"
        data = "{\"username\":\"%{User-Name}\"}"
        tls = ${..tls}
        timeout = 3.0
        fail_on_error = no
        expect_status_code = 204
    }

    pool {
        start = ${thread[pool].start_servers}
        min = ${thread[pool].min_spare_servers}
        max = ${thread[pool].max_servers}
        spare = ${thread[pool].max_spare_servers}
        uses = 0
        retry_delay = 30
        lifetime = 0
        idle_timeout = 60
    }
}